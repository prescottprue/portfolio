!function(){function a(a){function b(b,c){a(c)}function c(a,b){var c=this;c.element=b,c.setFocused=function(a){b.toggleClass("md-input-focused",!!a)},c.setHasValue=function(a){b.toggleClass("md-input-has-value",!!a)},c.setInvalid=function(a){b.toggleClass("md-input-invalid",!!a)},a.$watch(function(){return c.label&&c.input},function(a){a&&!c.label.attr("for")&&c.label.attr("for",c.input.attr("id"))})}return c.$inject=["$scope","$element","$mdUtil"],{restrict:"E",link:b,controller:c}}function b(){return{restrict:"E",require:"^?mdInputContainer",link:function(a,b,c,d){d&&(d.label=b,a.$on("$destroy",function(){d.label=null}))}}}function c(a,b){function c(a){return a.addClass("md-input"),d}function d(c,d,e,f){function g(a){return i.setHasValue(!k(a)||(d[0].validity||{}).badInput),a}function h(){function e(a){return i(),a}function f(){h.style.height="auto";var a=h.scrollHeight-h.offsetHeight;h.scrollTop=0;var b=h.offsetHeight+(a>0?a:0);h.style.height=b+"px"}function g(){h.scrollTop=0;var a=h.scrollHeight-h.offsetHeight,b=h.offsetHeight+a;h.style.height=b+"px"}var h=d[0],i=a.debounce(f,1);j?(j.$formatters.push(e),j.$viewChangeListeners.push(e)):i(),d.on("keydown input",i),d.on("scroll",g),angular.element(b).on("resize",i),c.$on("$destroy",function(){angular.element(b).off("resize",i)})}var i=f[0],j=f[1];if(i){if(i.input)throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");i.input=d,d.attr("id")||d.attr("id","input_"+a.nextUid()),"textarea"===d[0].tagName.toLowerCase()&&h();var k=j?j.$isEmpty:function(){return 0===(""+d.val()).length};j?(c.$watch(function(){return j.$dirty&&j.$invalid},i.setInvalid),j.$formatters.push(g),j.$parsers.push(g)):g(),d.on("input",g),d.on("focus",function(){i.setFocused(!0)}).on("blur",function(){i.setFocused(!1)}),c.$on("$destroy",function(){i.setFocused(!1),i.setHasValue(!1),i.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],compile:c}}function d(){function a(a,b,c,d){function e(a){return i.text(b.val().length+"/"+f),a}var f,g=d[0],h=d[1],i=angular.element('<div class="md-char-counter">');c.$set("ngTrim","false"),h.element.append(i),g.$formatters.push(e),g.$viewChangeListeners.push(e),b.on("input keydown",e),a.$watch(c.mdMaxlength,function(a){f=a,angular.isNumber(a)&&a>0?(i.parent().length||$animate.enter(i,h.element,angular.element(h.element[0].lastElementChild)),e()):$animate.leave(i)}),g.$validators["md-maxlength"]=function(a,c){return!angular.isNumber(f)||0>f?!0:(b.val()||a||c||"").length<=f}}return{restrict:"A",require:["ngModel","^mdInputContainer"],link:a}}angular.module("material.components.input",["material.core"]).directive("mdInputContainer",a).directive("label",b).directive("input",c).directive("textarea",c).directive("mdMaxlength",d),a.$inject=["$mdTheming"],c.$inject=["$mdUtil","$window","$compile","$animate"]}();