goog.provide("ng.material.components.input"),goog.require("ng.material.core"),function(){function a(a,b){function c(b,c){a(c)}function d(a,c,d){var e=this;e.isErrorGetter=d.mdIsError&&b(d.mdIsError),e.element=c,e.setFocused=function(a){c.toggleClass("md-input-focused",!!a)},e.setHasValue=function(a){c.toggleClass("md-input-has-value",!!a)},e.setInvalid=function(a){c.toggleClass("md-input-invalid",!!a)},a.$watch(function(){return e.label&&e.input},function(a){a&&!e.label.attr("for")&&e.label.attr("for",e.input.attr("id"))})}return d.$inject=["$scope","$element","$attrs"],{restrict:"E",link:c,controller:d}}function b(){return{restrict:"E",require:"^?mdInputContainer",link:function(a,b,c,d){d&&!c.mdNoFloat&&(d.label=b,a.$on("$destroy",function(){d.label=null}))}}}function c(a,b){function c(c,d,e,f){function g(a){return j.setHasValue(!k.$isEmpty(a)),a}function h(){j.setHasValue(d.val().length>0||(d[0].validity||{}).badInput)}function i(){function e(a){return j(),a}function f(){i.style.height="auto",i.scrollTop=0;var a=g();a&&(i.style.height=a+"px")}function g(){var a=i.scrollHeight-i.offsetHeight;return i.offsetHeight+(a>0?a:0)}function h(){i.scrollTop=0;var a=i.scrollHeight-i.offsetHeight,b=i.offsetHeight+a;i.style.height=b+"px"}var i=d[0],j=a.debounce(f,1);k?(k.$formatters.push(e),k.$viewChangeListeners.push(e)):j(),d.on("keydown input",j),d.on("scroll",h),angular.element(b).on("resize",j),c.$on("$destroy",function(){angular.element(b).off("resize",j)})}var j=f[0],k=f[1]||a.fakeNgModel(),l=angular.isDefined(e.readonly);if(j){if(j.input)throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");j.input=d,d.addClass("md-input"),d.attr("id")||d.attr("id","input_"+a.nextUid()),"textarea"===d[0].tagName.toLowerCase()&&i();var m=!1,n=j.isErrorGetter||function(){return k.$invalid&&(m||k.$touched)};c.$watch(n,j.setInvalid),k.$parsers.push(g),k.$formatters.push(g),d.on("input",h),l||d.on("focus",function(){m=!0,j.setFocused(!0),c.$evalAsync()}).on("blur",function(){j.setFocused(!1),h()}),c.$on("$destroy",function(){j.setFocused(!1),j.setHasValue(!1),j.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],link:c}}function d(a){function b(b,c,d,e){function f(a){return j.text((c.val()||a||"").length+"/"+g),a}var g,h=e[0],i=e[1],j=angular.element('<div class="md-char-counter">');d.$set("ngTrim","false"),i.element.append(j),h.$formatters.push(f),h.$viewChangeListeners.push(f),c.on("input keydown",function(){f()}),b.$watch(d.mdMaxlength,function(b){g=b,angular.isNumber(b)&&b>0?(j.parent().length||a.enter(j,i.element,angular.element(i.element[0].lastElementChild)),f()):a.leave(j)}),h.$validators["md-maxlength"]=function(a,b){return!angular.isNumber(g)||0>g?!0:(a||c.val()||b||"").length<=g}}return{restrict:"A",require:["ngModel","^mdInputContainer"],link:b}}function e(){function a(a,b,c,d){if(d){var e=c.placeholder;b.removeAttr("placeholder"),d.element.append('<div class="md-placeholder">'+e+"</div>")}}return{restrict:"A",require:"^^?mdInputContainer",link:a}}angular.module("material.components.input",["material.core"]).directive("mdInputContainer",a).directive("label",b).directive("input",c).directive("textarea",c).directive("mdMaxlength",d).directive("placeholder",e),a.$inject=["$mdTheming","$parse"],c.$inject=["$mdUtil","$window"],d.$inject=["$animate"]}();